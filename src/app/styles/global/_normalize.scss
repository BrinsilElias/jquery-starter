*,
::before,
::after { box-sizing: border-box; }

:where(:not(dialog)) {
    margin: 0;
}

:where(:not(fieldset, progress, meter)) {
    border-width: 0;
    border-style: solid;
    background-origin: border-box;
    background-repeat: no-repeat;
}

:where(html) {
    block-size: 100%;
    font-family: $font-sans;
    line-height: $font-lineheight-3;

    @include reduce-motion ($motionOK) {
        scroll-behavior: smooth;
    }
}

@include reduce-motion ($motionOK) {
    :where(:focus-visible) {
        transition: outline-offset 145ms $ease-2;
    }

    :where(:not(:active):focus-visible) {
        transition-duration: 0.25s;
    }
}

:where(:not(:active):focus-visible) {
    outline-offset: 5px;
}

:where(body) {
    min-block-size: 100%;
}

:where(h1, h2, h3, h4, h5, h6) {
    line-height: $font-lineheight-1;
    font-weight: $font-weight-8;
    text-wrap: balance;
}

:where(h1) {
    font-size: $font-size-8;
}

:where(h2) {
    font-size: $font-size-6;
}

:where(h3) { font-size: $font-size-5; }
:where(h4) { font-size: $font-size-4; }
:where(h5) { font-size: $font-size-3; }

:where(p, ul, ol, dl, h6) {
    font-size: $font-size-2;
}

:where(a, u, ins, abbr) {
    text-underline-offset: 1px;
}

:where(a[href], area, button,
input:not([type='text'], [type='email'], [type='number'], [type='password'], [type=''], [type='tel'], [type='url']),
label[for],
select,
summary,
[tabindex]:not([tabindex*='-'])
) {
    cursor: pointer;
}

:where(a) {
    padding-inline: $size-1;
    margin-inline: calc($size-1 * -1);
    padding-block: $size-1;
    margin-block: calc($size-1 * -1);

    &:where([href]) {
        text-decoration-color: $indigo-2;

        &:where(:visited) {
            text-decoration-color: $purple-2;
        }
    }

    &:where(:not(:hover)) {
        text-decoration: inherit;
    }
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
    display: block;
}

:where(img, svg, video) {
    max-inline-size: 100%;
    block-size: auto;
}

:where(input, button, textarea, select),
:where(input[type='file'])::-webkit-file-upload-button {
    font: inherit;
    font-size: inherit;
    color: inherit;
    letter-spacing: inherit;
}

::placeholder {
    color: $gray-7;
    opacity: 0.75;

    @include color-scheme($OSdark) {
        color: $gray-6;
    }
}

:where(input:not([type='range']), textarea) {
    padding-inline: $size-2;
    padding-block: $size-1;
}

:where(select) {
    padding-inline: $size-relative-4 0;
    padding-block: 0.75ch;
}

:where(textarea, select, input:not([type='button'],[type='submit'],[type='reset'])) {
    background-color: var(--surface-2);
    border-radius: $radius-2;
}

:where(textarea) { resize: block; }

:where(input[type='checkbox'], input[type='radio']) {
    block-size: $size-3;
    inline-size: $size-3;
}

:where(code, kbd, samp, pre) { font-family: $font-mono; }
:where(:not(pre) > code, kbd) { white-space: nowrap; }

:where(pre) {
    white-space: pre;
    min-inline-size: 0;
    max-inline-size: max-content;
    writing-mode: lr;
    direction: ltr;
}

:where(:not(pre) > code) {
    padding: $size-1 $size-2;
    background: var(--surface-2);
    border-radius: $radius-2;
    writing-mode: lr;
}

:where(kbd, var) {
    padding: $size-1 $size-2;
    border-width: $border-size-1;
    border-color: var(--surface-4);
    border-radius: $radius-2;
}

:where(mark) {
    border-radius: $radius-2;
    padding-inline: $size-1;
}

:where(ol, ul) { padding-inline-start: $size-8; }
:where(li) { padding-inline-start: $size-2; }
:where(dt, summary) { font-weight: $font-weight-7; }

:where(p) {
    text-wrap: pretty;
}

:where(hr) {
    margin-block: $size-fluid-5;
    height: $border-size-2;
    background-color: var(--surface-3);
}

:where(figure) {
    display: grid;
    gap: $size-2;
    place-items: center;

    :where(figcaption) {
        font-size: $font-size-1;
        text-wrap: balance;
    }
}

:where(blockquote, :not(blockquote) cite) {
    border-inline-start-width: $border-size-3;
}

:where(blockquote) {
    display: grid;
    gap: $size-3;
    padding-block: $size-3;
    padding-inline: $size-4;
}

:where(:not(blockquote) > cite) {
    padding-inline-start: $size-2;
}

:where(summary) {
    background: var(--surface-3);
    padding: $size-2 $size-3;
    margin: calc($size-2 * -1) calc($size-3 * -1);
    border-radius: $radius-2;
}

:where(details) {
    padding-inline: $size-3;
    padding-block: $size-2;
    background: var(--surface-2);
    border-radius: $radius-2;
}

:where(details[open] > summary) {
    margin-bottom: $size-2;
    border-end-start-radius: 0;
    border-end-end-radius: 0;
}

:where(fieldset) {
    border-radius: $radius-2;
    border: $border-size-1 solid var(--surface-4);
}

:where(del) {
    background: $red-9;
    color: $red-2;
}

:where(ins) {
    background: $green-9;
    color: $green-1;
}

:where(abbr) {
    text-decoration-color: $blue-5;
}

:where(dialog) {
    background-color: var(--surface-1);
    color: inherit;
    border-radius: $radius-3;

    &::backdrop {
        backdrop-filter: blur(25px);
    }
}

:where(html:has(dialog[open])) {
    overflow: hidden;
}

:where(menu) {
    padding-inline-start: 0;
    display: flex;
    gap: var(--size-3);
}

:where(sup) {
    font-size: 0.5em;
}

:where(table) {
    width: fit-content;
    border: 1px solid var(--surface-2);
    background: var(--surface-2);
    border-radius: $radius-3;
}

:where(table:not(:has(tfoot)) tr:last-child td:first-child) {
    border-end-start-radius: var($nice-inner-radius);
}

:where(table:not(:has(tfoot)) tr:last-child td:last-child) {
    border-end-end-radius: var($nice-inner-radius);
}

:where(table thead tr:first-child th:first-child) {
    border-start-start-radius: var($nice-inner-radius);
}

:where(table thead tr:first-child th:last-child) {
    border-start-end-radius: var($nice-inner-radius);
}

:where(tfoot tr:last-child :is(th,td):first-of-type) {
    border-end-start-radius: var($nice-inner-radius);
}

:where(tfoot tr:last-child :is(th,td):last-of-type) {
    border-end-end-radius: var($nice-inner-radius);
}

:where(th) {
    color: var(--text-1);
    background-color: var(--surface-2);
}

:where(table :is(a, button, [contenteditable]):is(:focus-visible)) {
    outline-offset: -2px;
}

:where(td) {
    background: var(--surface-1);
    max-inline-size: $size-content-2;
    text-wrap: pretty;
}

:where(td,th) {
    text-align: left;
    padding: $size-2;
}

:where(:is(td,th):not([align])) {
    text-align: center;
}

:where(thead) {
    border-collapse: collapse;
}

:where(table tr:hover td),
:where(tbody tr:nth-child(even):hover td) {
    background-color: $gray-10;

    @include color-scheme($OSlight) {
        background-color: white;
    }
}

:where(table > caption) {
    margin: $size-3;
}

:where(tfoot button) {
    padding-block: $size-1;
    padding-inline: $size-3;
}
